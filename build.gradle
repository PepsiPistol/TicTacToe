/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.2.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

sourceSets {
  selenium
}


// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
	compile "com.sparkjava:spark-core:2.6.0"

	// https://mvnrepository.com/artifact/eu.de-swaef.pdf/Markdown2Pdf
	compile group: 'eu.de-swaef.pdf', name: 'Markdown2Pdf', version: '2.0.1'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
	
	// Compile selenium for end-to-end testing.
	seleniumCompile 'junit:junit:4.12'
	seleniumCompile 'org.seleniumhq.selenium:selenium-java:3.6.0'
	
	// https://mvnrepository.com/artifact/com.saucelabs/sauce_junit
	testCompile group: 'com.saucelabs', name: 'sauce_junit', version: '2.1.23'

}

task stage(dependsOn: ['installDist','build','clean'])
build.mustRunAfter clean
installDist.mustRunAfter build

task generatePdf(type:JavaExec, dependsOn:[classes]) {
   main = 'is.ru.TicTacToe.documentation2pdf'
   classpath = sourceSets.main.runtimeClasspath
}

task selenium(type: Test, dependsOn: installDist) {
  testClassesDir = sourceSets.selenium.output.classesDir
  classpath = sourceSets.selenium.runtimeClasspath
}

build.finalizedBy(generatePdf);
build.finalizedBy(selenium);

// Define the main class for the application
mainClassName = 'is.ru.TicTacToe.TicTacToeWebInterface'

